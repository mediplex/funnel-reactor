/* eslint-disable import/no-cycle */

import dynamic from 'next/dynamic';

import Box from './layout-elements/box';
import Container from './layout-elements/container';
import Paper from './layout-elements/paper';
import Image from './media-elements/image';
// import ImagePopup from './media-elements/image-popup';
// import YoutubeVideo from './media-elements/youtube-video';
// import YoutubeVideoPopup from './media-elements/youtube-video-popup';
import Typograhpy from './text-elements/typograhpy';
import BasicForm from './basic-form';
import Grid from './layout-elements/Grid';
import Level from './layout-elements/Level';


// const Box = dynamic(import('./layout-elements/box'));
// const Container = dynamic(import('./layout-elements/container'));
// const Paper = dynamic(import('./layout-elements/paper'));
// const Image = dynamic(import('./media-elements/image'));
const ImagePopup = dynamic(import('./media-elements/image-popup'));
const YoutubeVideo = dynamic(import('./media-elements/youtube-video'));
const YoutubeVideoPopup = dynamic(import('./media-elements/youtube-video-popup'));
// const Typograhpy = dynamic(import('./text-elements/typograhpy'));
// const BasicForm = dynamic(import('./basic-form'));
// const Grid = dynamic(import('./layout-elements/Grid'));
const BulletList = dynamic(import('./text-elements/BulletList'));

const Element = ({ name, data }) => {
  // TODO: The key can be generated by firebase
  // TODO: The key is used to track the rendering and later to trigger FB Pixel Events
  switch (name) {
    case 'Grid':
      return <Grid data={data} />;
    case 'Level':
      return <Level data={data} />;
    case 'box':
      return <Box data={data} />;
    case 'container':
      return <Container data={data} />;
    case 'paper':
      return <Paper data={data} />;
    case 'typograhpy':
      return <Typograhpy data={data} />;
    case 'BulletList':
      return <BulletList data={data} />;
    case 'image':
      return <Image data={data} />;
    case 'image-popup':
      return <ImagePopup data={data} />;
    case 'youtube-video':
      return <YoutubeVideo data={data} />;
    case 'youtube-video-popup':
      return <YoutubeVideoPopup data={data} />;
    case 'basic-form':
      return <BasicForm data={data} />;
    default:
      return <div>Element not found</div>;
  }
};

const Elements = ({ elements }) =>
  // elements &&
  elements.map(el => {
    const id = Math.random()
      .toString(36)
      .substring(2, 15); // + Math.random().toString(36).substring(2, 15);keId;

    return <Element key={id} name={el.name} data={el.data} />;
  });

export default Elements;
